SELECT Topico.*, Data.data FROM Topico
INNER JOIN Topico_Data ON Topico.id_topico = Topico_Data.id_topico INNER JOIN Data ON Topico_Data.data = Data.data;

SELECT Materia.*, Topico.nome AS topico_nome, Topico.desempenho, Topico.progresso
FROM Materia
INNER JOIN Topico ON Materia.id_materia = Topico.id_materia;

SELECT Materia_Tag.nome_tag, Materia.nome AS nome_materia, Materia.data_inicio, Materia.data_fim, Materia.origem
FROM Materia_Tag
INNER JOIN Materia
    ON Materia_Tag.id_materia = Materia.id_materia;

SELECT Data.data, Topico.nome AS topico_nome, Topico.desempenho, Topico.progresso
FROM Data
INNER JOIN Topico_Data ON Data.data = Topico_Data.data
INNER JOIN Topico ON Topico_Data.id_topico = Topico.id_topico;

SELECT *
FROM Materia;

SELECT * FROM Tag;

SELECT *
FROM Topico;

SELECT *
FROM Data;

SELECT *
FROM Materia_Tag;

SELECT *
FROM Topico_Data;

SELECT *
FROM Materia WHERE origem = '';
 
SELECT * FROM Tag
WHERE nome = '';

SELECT *
FROM Topico
WHERE desempenho > 8;

SELECT *
FROM Data
WHERE data BETWEEN '2024-01-01' AND '2024-12-31';

SELECT *
FROM Materia_Tag WHERE id_materia = 123;

SELECT *
FROM Topico_Data WHERE id_topico = 456;

UPDATE Tag
SET nome = 'Nova Tag' WHERE nome = 'Antiga Tag';

UPDATE Materia
SET nome = 'Nova Materia' WHERE id_materia = 1;

UPDATE Materia
SET data_inicio = '2024-02-01', data_fim = '2024-10-23' WHERE id_materia = 5;

UPDATE Topico
SET nome = 'Novo Topico' WHERE id_topico = 1;

UPDATE Topico
SET desempenho = 5.0, progresso = 'finalizado' WHERE id_topico = 2;

INSERT INTO Tag (nome) VALUES ('Calculo');

INSERT INTO Materia (nome, data_inicio, data_fim, origem)
VALUES ('Arquitetura de Software', '2024-09-01', '2024-12-20', 'IESB');

INSERT INTO Topico (id_materia, nome, desempenho, progresso) VALUES (16, 'Calculo numerico', 9.8, 'em andamento');
 
INSERT INTO Data (data) VALUES ('2024-04-27');

INSERT INTO Materia_Tag (id_materia, nome_tag) VALUES (1, "Matemática");

INSERT INTO Topico_Data (id_topico, data) VALUES (1, '2024-01-01');

INSERT INTO Materia (nome, data_inicio, data_fim, origem) VALUES ('POO', '2025-01-15', '2025-06-20', 'IESB');

INSERT INTO Topico (id_materia, nome, desempenho, progresso) VALUES (1, 'Estrutura de dados', 10, 'em andamento');

INSERT INTO Materia_Tag (id_materia, nome_tag) VALUES (2, "História");

INSERT INTO Topico_Data (id_topico, data) VALUES (4, '2024-02-24');

DELETE FROM Tag
WHERE nome = "Matemática";

DELETE FROM Materia WHERE id_materia = 8;

DELETE FROM Topico WHERE id_topico = 7;

DELETE FROM Data WHERE data = '2024-01-01';

DELETE FROM Materia_Tag
WHERE id_materia = 1 AND nome_tag = 2;

DELETE FROM Topico_Data
WHERE id_topico = 3 AND data = '2024-04-26';

DELETE FROM Materia WHERE id_materia = 4;

DELETE FROM Topico WHERE id_topico = 5;

DELETE FROM Materia_Tag
WHERE id_materia = 2 AND nome_tag = "Matemática";
 
DELETE FROM Topico_Data
WHERE id_topico = 7 AND data = '2025-01-23';

-->As outras funcionalidades (selecionar, deletar e criar Materia já estão implementadas no próprio código)
//atualizarMateria
export const atualizarMateria = async (req, res) => {
  try {
    const queryAtualizarMateria = {
      text: `UPDATE Materia
             SET nome = $1, data_inicio = $2, data_fim = $3, origem = $4
             WHERE id_materia = $5
             RETURNING *`,
      values: [
        req.body.nome,
        req.body.data_inicio,
        req.body.data_fim,
        req.body.origem,
        req.body.id_materia,
      ],
    };

    const resultado = await pool.query(queryAtualizarMateria);
    res.status(200).json(resultado.rows[0]);
  } catch (error) {
    res.status(500).json({ error: error.message });
  }
}


//SelecionarTopico
export const obterTopicos = async (req, res) => {
  try {
    const queryTodosTopicos = 'SELECT id_topico, nome, descricao, id_materia FROM Topico';

    const resultado = await pool.query(queryTodosTopicos);
    res.status(200).json(resultado.rows);
  } catch (error) {
    res.status(500).json({ error: error.message });
  }
}


//CriarTopico
export const criarTopico = async (req, res) => {
  try {
    const queryCriarTopico = {
      text: `INSERT INTO Topico(nome, descricao, id_materia) VALUES ($1, $2, $3) RETURNING *`,
      values: [req.body.nome, req.body.descricao, req.body.id_materia]
    }

    const resultado = await pool.query(queryCriarTopico);
    res.status(200).json(resultado.rows[0]);
  } catch (error) {
    res.status(500).json({ error: error.message });
  }
}


//AtualizarTopico
export const atualizarTopico = async (req, res) => {
  try {
    const queryAtualizarTopico = {
      text: `UPDATE Topico
             SET nome = $1, descricao = $2, id_materia = $3
             WHERE id_topico = $4
             RETURNING *`,
      values: [
        req.body.nome,
        req.body.descricao,
        req.body.id_materia,
        req.body.id_topico,
      ],
    };

    const resultado = await pool.query(queryAtualizarTopico);
    res.status(200).json(resultado.rows[0]);
  } catch (error) {
    res.status(500).json({ error: error.message });
  }
}


//DeletarTopico
export const deletarTopico = async (req, res) => {
  try {
    const queryDeletarTopico = {
      text: `DELETE FROM Topico WHERE id_topico = $1 RETURNING *`,
      values: [req.body.id_topico]
    }

    const resultado = await pool.query(queryDeletarTopico);
    res.status(200).json(resultado.rows[0]);
  } catch (error) {
    res.status(500).json({ error: error.message });
  }
}


//SelecionarTags
export const obterTags = async (req, res) => {
  try {
    const queryTodasTags = 'SELECT DISTINCT nome_tag FROM Materia_Tag';

    const resultado = await pool.query(queryTodasTags);
    res.status(200).json(resultado.rows);
  } catch (error) {
    res.status(500).json({ error: error.message });
  }
}


//CriarTags
export const criarTag = async (req, res) => {
  try {
    const queryCriarTag = {
      text: `INSERT INTO Materia_Tag(nome_tag) VALUES ($1) RETURNING *`,
      values: [req.body.nome_tag]
    }

    const resultado = await pool.query(queryCriarTag);
    res.status(200).json(resultado.rows[0]);
  } catch (error) {
    res.status(500).json({ error: error.message });
  }
}


//AtualizarTags
export const atualizarTag = async (req, res) => {
  try {
    const queryAtualizarTag = {
      text: `UPDATE Materia_Tag
             SET nome_tag = $1
             WHERE id_materia_tag = $2
             RETURNING *`,
      values: [
        req.body.nome_tag,
        req.body.id_materia_tag,
      ],
    };

    const resultado = await pool.query(queryAtualizarTag);
    res.status(200).json(resultado.rows[0]);
  } catch (error) {
    res.status(500).json({ error: error.message });
  }
}


//DeletarTags
export const deletarTag = async (req, res) => {
  try {
    const queryDeletarTag = {
      text: `DELETE FROM Materia_Tag WHERE id_materia_tag = $1 RETURNING *`,
      values: [req.body.id_materia_tag]
    }

    const resultado = await pool.query(queryDeletarTag);
    res.status(200).json(resultado.rows[0]);
  } catch (error) {
    res.status(500).json({ error: error.message });
  }
}


//SelecionarDatas
export const obterDatas = async (req, res) => {
  try {
    const queryTodasDatas = 'SELECT DISTINCT data_inicio, data_fim FROM Materia';

    const resultado = await pool.query(queryTodasDatas);
    res.status(200).json(resultado.rows);
  } catch (error) {
    res.status(500).json({ error: error.message });
  }
}


//CriarData
export const criarData = async (req, res) => {
  try {
    const queryCriarData = {
      text: `INSERT INTO Materia(data_inicio, data_fim) VALUES ($1, $2) RETURNING *`,
      values: [req.body.data_inicio, req.body.data_fim]
    }

    const resultado = await pool.query(queryCriarData);
    res.status(200).json(resultado.rows[0]);
  } catch (error) {
    res.status(500).json({ error: error.message });
  }
}


//AtualizarData
export const atualizarData = async (req, res) => {
  try {
    const queryAtualizarData = {
      text: `UPDATE Materia
             SET data_inicio = $1, data_fim = $2
             WHERE id_materia = $3
             RETURNING *`,
      values: [
        req.body.data_inicio,
        req.body.data_fim,
        req.body.id_materia,
      ],
    };

    const resultado = await pool.query(queryAtualizarData);
    res.status(200).json(resultado.rows[0]);
  } catch (error) {
    res.status(500).json({ error: error.message });
  }
}


//DeletarData
export const deletarData = async (req, res) => {
  try {
    const queryDeletarData = {
      text: `DELETE FROM Materia WHERE id_materia = $1 RETURNING data_inicio, data_fim`,
      values: [req.body.id_materia]
    }

    const resultado = await pool.query(queryDeletarData);
    res.status(200).json(resultado.rows[0]);
  } catch (error) {
    res.status(500).json({ error: error.message });
  }
}


